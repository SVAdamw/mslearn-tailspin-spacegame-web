trigger:
  - '*'

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'

steps:
  # .NET SDK 8.x (zgodny z projektem)
  - task: UseDotNet@2
    displayName: 'Use .NET SDK 8.x'
    inputs:
      packageType: sdk
      version: '8.x'

  # Node.js 16.x (kompatybilny z node-sass)
  - task: NodeTool@0
    displayName: 'Use Node.js 16.x'
    inputs:
      versionSpec: '16.x'

  # Instalacja zależności npm
  - task: Npm@1
    displayName: 'Install npm dependencies'
    inputs:
      command: 'install'
      verbose: false

  # Kompilacja Sass (jeśli nadal używasz node-sass)
  - script: './node_modules/.bin/node-sass Tailspin.SpaceGame.Web/wwwroot --output Tailspin.SpaceGame.Web/wwwroot'
    displayName: 'Compile Sass assets'

  # Alternatywa: użyj Dart Sass (zalecane)
  # - script: 'npx sass Tailspin.SpaceGame.Web/wwwroot:Tailspin.SpaceGame.Web/wwwroot'
  #   displayName: 'Compile Sass assets with Dart Sass'

  # Gulp (jeśli używasz lokalnie)
  - script: 'npx gulp'
    displayName: 'Run gulp tasks'

  # Informacja o buildzie
  - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
    displayName: 'Write build info'
    workingDirectory: Tailspin.SpaceGame.Web/wwwroot

  # Restore .NET
  - task: DotNetCoreCLI@2
    displayName: 'Restore project dependencies